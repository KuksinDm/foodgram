version: '3'

volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  backend:
    env_file: .env
    build: ./backend/
    volumes:
      - static:/backend_static
      - media:/media
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate && 
             python manage.py createsuperuser_custom &&
             python manage.py createregularuser_custom &&
             python manage.py import_ingredients_from_json ingredients.json && 
             python manage.py import_tags_json tags.json && 
             python manage.py load_csv ingredients.csv && 
             gunicorn --bind 0.0.0.0:8000 backend.wsgi"

  frontend:
    env_file: .env
    build: ./frontend/
    command: cp -r /app/build/. /static/
    volumes:
      - static:/static

  gateway:
    build: ./nginx/
    env_file: .env
    ports:
      - 8000:80
    volumes:
      - static:/static
      - media:/media
    depends_on:
      - backend
      - frontend
